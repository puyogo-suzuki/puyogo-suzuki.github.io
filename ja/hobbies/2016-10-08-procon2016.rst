---
title: 高専プロコン2016人力部門
subtitle: そんなパズルは壊してしまえ
tags: csharp, wpf, win32, opencv, imaging, ai, kosen-procon
cover: procon2016/scan4.jpg
lastdate: 2021-09-23
---
`GitHub Repository`_: https://github.com/mct-procon/procon2016/tree/ProductionVersion


`全国高等専門学校プログラミングコンテスト2016`_ 競技部門に参加しました．
三重県伊勢市で開催され，1回戦敗退でした．（人力部門なのにコンピュータで頑張って解こうとしたので当たり前だよなぁ？）

ルール概要
=============
多角形パズル（物理）を渡されます．

.. raw::html

    <div style="display: grid; grid-template-columns: repeat(2, 1fr); width: 100%;">
        <div style="margin: 2em"><img style="max-width: 100%; max-height: 40vh; object-fit: scale-down;" src="../images/procon2016/img011.jpg" alt="Puzzle Piece"><br>Puzzle Piece</div>
        <div style="margin: 2em"><img style="max-width: 100%;object-fit: scale-down;" src="../images/procon2016/SANY1464.jpg" alt="Puzzle Frame"><br>Puzzle Frame</div>
    </div>

これを読み取ってパソコンで解きます．

.. raw::html

    <div style="display: grid; grid-template-columns: repeat(2, 1fr); width: 100%;">
        <div style="margin: 2em"><img style="max-width: 100%;object-fit: scale-down;" src="../images/procon2016/solver.png" alt="Solving Puzzle"><br>Solving Puzzle</div>
        <div style="margin: 2em"><img style="max-width: 100%;object-fit: scale-down;" src="../images/procon2016/solver2.png" alt="Solving with error"><br>Solving Puzzle with Error</div>
    </div>

コンポーネント全体
======================

パズルをスキャナで読み取り，ベクタ化するスキャナ（Scanner, SonnaPuzzle.exe）と実際にパズルを解くソルバ（Solver, PuzzleSolver.vs2015.exe）に分かれます．
スキャナは私が，ソルバはチームメンバの川上さんが担当しました．

スキャナ
=========
.. raw::html

    <div style="display: grid; grid-template-columns: repeat(2, 1fr); grid-template-rows: repeat(3, auto); width: 100%;">
        <div style="margin: 2em"><img style="max-width: 100%;object-fit: scale-down;" src="../images/procon2016/scan1.png" alt="First Step"><br>First Step</div>
        <div style="margin: 2em"><img style="max-width: 100%;object-fit: scale-down;" src="../images/procon2016/scan2.jpg" alt="Choosing Step"><br>Choosing Step</div>
        <div style="margin: 2em"><img style="max-width: 100%;object-fit: scale-down;" src="../images/procon2016/scan3.jpg" alt="Binalize Step"><br>Binalize Step</div>
        <div style="margin: 2em"><img style="max-width: 100%;object-fit: scale-down;" src="../images/procon2016/scan4.jpg" alt="Detection Step"><br>Detection Step(a bit old version)</div>
        <div style="margin: 2em; grid-column: 1/3;"><img style="max-width: 100%;object-fit: scale-down;" src="../images/procon2016/scan5.jpg" alt="Detection Step"><br>Detection Step(very old version)</div>
    </div>

OpenCVの関数を使いまくります．
 1. HSVで2値化します．（自分でコードを書いているっぽいです．）
 2. OpenCVのFindContours関数を用いて，境界を抽出します．
 3. OpenCVのApproxPolyDP関数を用いて，ベクトル化します．

新しい物好きでSIMD（``System.Numerics.Vector``）使ってるよこいつ…
カスケード検出器使って，図形のタグ付けもしようとしていましたが，遅すぎでしたね…
パノラマ機能も使っていません．

ルールで，頂点はすべて5mm×5mmの方眼上に配置される，みたいなのがあれば，ApproxPolyDPよりも精度の高い検出方法を考えよう！みたいことができたと思うんですけどね…

.Net Framework 4.6, WPF, Emgu.OpenCV 3.0（OpenCLやっほい）を用いました．あと，カメラの画像も取得できますが，使った記憶がありません．

ソルバ
========

私が開発したわけではない（川上さん担当）ので，ざっと説明しますが，「結合度」による，「ビームサーチ」を行います．
結合度は，次の要因により増加します．

    - 辺の一致
    - 角が180度になる
    - 角が360度になる

.. figure::../images/procon2016/connectivity.png
   :alt: Connectivity Value
   :width: 500px
   Connectivity

これは，人の組み方を真似しています．

Microsoft Visual C++ 2015, DxLibを用いました．

（実行画面は最初の方に出しています．）


乾燥した感想
==============

1位のチームがコンピュータ使っているのかは知りませんが，使っていなかったらたまげてそう．
皆さんの人力アピール，徹夜アピールが面白かったです．
ソルバの開発が遅くて，バスの中で仕様変更に対応するためにコード書いてた思い出があります．
というか，高専入って早々，なんで一人で1コンポーネント担当しなきゃいけないんですかね…

Related Links
================

 * `松江高専情報工学科の該当記事`_
 * `コンピュータフェスティバル2017`_


.. _GitHub Repository: https://github.com/mct-procon/procon2016/tree/ProductionVersion
.. _全国高等専門学校プログラミングコンテスト2016: https://www.procon.gr.jp/?page_id=59141
.. _コンピュータフェスティバル2017: 2017-03-13-comfes2017.html
.. _松江高専情報工学科の該当記事: http://www.matsue-ct.jp/it/index.php/46-topics/topics2016b/283-topics20161020